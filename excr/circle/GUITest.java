
import java.util.ArrayList;
import javax.swing.*;

public class GUITest extends javax.swing.JFrame {
    
    // ==================== FIELDS (TAMBAH DI SINI) ====================
    // Object untuk business logic
    private Circle lingkaran;
    private ArrayList<String> historyList;  // Simpan history
    
    private static final java.util.logging.Logger logger = 
        java.util.logging.Logger.getLogger(GUITest.class.getName());
    
    // ==================== CONSTRUCTOR ====================
    public GUITest() {
        initComponents();  // WAJIB DULU! (init GUI components)
        
        // SETELAH initComponents(), tambah initialization:
        initCustomComponents();
    }
    
    // ==================== CUSTOM INITIALIZATION ====================
    private void initCustomComponents() {
        // Initialize objects
        this.lingkaran = new Circle();
        this.historyList = new ArrayList<>();
        
        // Center window
        setLocationRelativeTo(null);
        
        // Set default text
        areaAnswer.setText("Masukkan radius dan klik Save");
        
        // Set title
        setTitle("Circle Calculator - Improved");
        
        // Add keyboard shortcut (Enter = Save)
        radiusTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                    saveButton.doClick();
                }
            }
        });
    }
    
    // ==================== GETTER/SETTER (TAMBAH DI SINI) ====================
    public Circle getLingkaran() {
        return this.lingkaran;
    }
    
    public void setLingkaran(Circle lingkaran) {
        this.lingkaran = lingkaran;
    }
    
    public ArrayList<String> getHistoryList() {
        return new ArrayList<>(this.historyList);  // Return copy
    }
    
    // ==================== CUSTOM METHODS (TAMBAH DI SINI) ====================
    
    /**
     * Clear all input fields
     */
    private void clearForm() {
        radiusTextField.setText("");
        areaAnswer.setText("Masukkan radius dan klik Save");
        saveButton.setText("Save");
    }
    
    /**
     * Add calculation to history
     */
    private void addToHistory(double radius, double keliling, double luas) {
        String entry = String.format("R:%.2f | K:%.2f | L:%.2f", 
                                     radius, keliling, luas);
        historyList.add(entry);
    }
    
    
    /**
     * Display calculation result
     */
    private void displayResult(double radius, double keliling, double luas) {
        String result = String.format(
            "üìä HASIL PERHITUNGAN\n" +
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n" +
            "Radius    : %.2f\n" +
            "Keliling  : %.2f\n" +
            "Luas      : %.2f\n\n" +
            "üìù History: %d calculations",
            radius, keliling, luas, historyList.size()
        );
        areaAnswer.setText(result);
    }
    
    /**
     * Display error message
     */
    private void displayError(String message) {
        areaAnswer.setText("‚ùå ERROR\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n" + message);
        saveButton.setText("Try Again");
    }
    
    /**
     * Validate input
     */
    private boolean validateInput(String input) {
        if (input.trim().isEmpty()) {
            displayError("Input tidak boleh kosong!");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaAnswer = new javax.swing.JTextArea();
        radiusTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        radiusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaAnswer.setColumns(20);
        areaAnswer.setRows(5);
        jScrollPane1.setViewportView(areaAnswer);

        radiusTextField.setText("...");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        radiusLabel.setText("Radius :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(radiusLabel)
                        .addGap(18, 18, 18)
                        .addComponent(radiusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusLabel)
                    .addComponent(radiusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        pack();
    }// </editor-fold>                        

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        // GET INPUT
        String input = radiusTextField.getText();
        
        // VALIDATE
        if (!validateInput(input)) {
            return;
        }
        
        // PROCESS
        try {
            double radius = Double.parseDouble(input.trim());
            
            // Validate range
            if (radius <= 0) {
                displayError("Radius harus lebih besar dari 0!");
                return;
            }
            
            // Calculate
            lingkaran.setRadius(radius);
            double keliling = lingkaran.hitungKeliling();
            double luas = lingkaran.hitungLuas();
            
            // Save to history
            addToHistory(radius, keliling, luas);
            
            // Display result
            displayResult(radius, keliling, luas);
            
            // Update button
            saveButton.setText("‚úÖ Calculated");
            
        } catch (NumberFormatException e) {
            displayError("Input harus berupa angka!\nContoh: 5 atau 3.14");
        }
    }                                          

    
    // ==================== EVENT HANDLERS (EDIT LOGIC DI SINI) ====================
    
    private void radiusTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // Empty - atau bisa trigger save button:
        saveButton.doClick();
    }
    
    /**
     * @param args the command line arguments
     */
        // ==================== MAIN METHOD ====================
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : 
                 javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | 
                 javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(() -> new GUIImproved().setVisible(true));
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextArea areaAnswer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel radiusLabel;
    private javax.swing.JTextField radiusTextField;
    private javax.swing.JButton saveButton;
    // End of variables declaration                   
}
